{
  "Comment": "An example of the Amazon States Language for starting a task and waiting for a callback.",
  "QueryLanguage": "JSONata",
  "StartAt": "WaitForHost",
  "States": {
    "WaitForHost": {
      "Type": "Task",
      "Resource": "arn:aws:states:::apigateway:invoke.waitForTaskToken",
      "Arguments": {
        "ApiEndpoint": "${ApiEndpoint}",
        "Method": "POST",
        "AllowNullValues": true,
        "Headers": {},
        "Stage": "${Stage}",
        "Path": "{% '/@connections/' & $states.input.hostConnectionId %}",
        "QueryParameters": {},
        "RequestBody": {
          "callbackToken": "{% $states.context.Task.Token %}"
        },
        "AuthType": "IAM_ROLE"
      },
      "Next": "GenerateRoundInfo",
      "Assign": {
        "players": "{% $states.result.players %}",
        "round": 1,
        "room": "{% $states.result.room %}"
      }
    },
    "GenerateRoundInfo": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Output": "{% $states.result.Payload %}",
      "Arguments": {
        "FunctionName": "",
        "Payload": {
          "room": "{% $room %}",
          "round": "{% $round %}",
          "players": "{% $players %}"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Next": "AwaitUploads",
      "Assign": {
        "prompt": "{% $states.result.prompt %}",
        "uploads": "{% $states.result.uploads %}"
      }
    },
    "AwaitUploads": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "SendRoundInfoToPlayer",
        "States": {
          "SendRoundInfoToPlayer": {
            "Type": "Task",
            "Resource": "arn:aws:states:::apigateway:invoke.waitForTaskToken",
            "Arguments": {
              "ApiEndpoint": "${ApiEndpoint}",
              "Method": "POST",
              "AllowNullValues": true,
              "Headers": {},
              "Stage": "${Stage}",
              "Path": "{% '/@connections/' & $states.input.connectionId %}",
              "QueryParameters": {},
              "RequestBody": {
                "callbackToken": "{% $states.context.Task.Token %}",
                "uploadUrl": "{% $state.input.uploadUrl %}"
              },
              "AuthType": "IAM_ROLE"
            },
            "End": true
          }
        }
      },
      "End": true,
      "Items": "{% $uploads %}"
    }
  }
}